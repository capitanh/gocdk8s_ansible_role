---
- name: Install pip packages
  pip:
    name:
      - kubernetes

- name: Transfer GoCD server config values file
  template:
    src: gocd_values.yml
    dest: /tmp/
    mode: 0644

- name: Install gocd helm chart
  kubernetes.core.helm:
    release_name: "{{gocd_app_name}}"
    chart_ref: gocd
    chart_repo_url: https://gocd.github.io/helm-chart
    release_namespace: "{{gocd_namespace}}"
    create_namespace: true
    wait: yes
    values_files:
      - /tmp/gocd_values.yml
  become_user: "{{admin_user}}"

- name: Get GoCD server pod name
  kubernetes.core.k8s_info:
    namespace: "{{gocd_namespace}}"
    kind: Pod
  register: gocd_pod
  become_user: "{{admin_user}}"

- name: Initialize GoCD secrets file
  kubernetes.core.k8s_exec:
    namespace: "{{gocd_namespace}}"
    pod: "{{gocd_pod.resources[0].metadata.name}}"
    command: /gocd-jre/bin/java -jar /godata/plugins/bundled/gocd-file-based-secrets-plugin.jar init -f /godata/config/secrets.json
  become_user: "{{admin_user}}"

- name: Create service account secrets
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{gocd_secret_name}}"
        namespace: "{{gocd_namespace}}"
        annotations:
          kubernetes.io/service-account.name: "{{gocd_service_account}}"
      type: kubernetes.io/service-account-token
  become_user: "{{admin_user}}"

###################################################################################
# Export config values as facts for use in playbooks

#- name: Get GoCD service IP
#  kubernetes.core.k8s_info:
#    api_version: v1
#    kind: Service
#    name: gocd-server
#    namespace: "{{gocd_namespace}}"
#  become_user: "{{admin_user}}"
#  register: L_GOCD_SERVICE_INFO
#
#- name: Get service account security token and certificate
#  kubernetes.core.k8s_info:
#    api_version: v1
#    kind: Secret
#    name: "{{gocd_secret_name}}"
#    namespace: "{{gocd_namespace}}"
#  become_user: "{{admin_user}}"
#  register: L_GOCD_SECRET_INFO
#
#- name: Export variables
#  set_fact:
#    GOCD_SERVICE_INFO: "{{L_GOCD_SERVICE_INFO}}"
#    GOCD_SECRET_INFO: "{{L_GOCD_SECRET_INFO}}"
